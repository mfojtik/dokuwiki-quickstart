#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

dest_dir=${OPENSHIFT_DATA_DIR}current

current_version=$(cat ${OPENSHIFT_BUILD_DEPENDENCIES_DIR}.current_version)
install_dir=${OPENSHIFT_BUILD_DEPENDENCIES_DIR}${current_version}

data_dir=${OPENSHIFT_DATA_DIR}data/

if [ ! -d ${data_dir} ]; then
  mkdir -p ${OPENSHIFT_DATA_DIR}data
  mv ${install_dir}/data/* ${data_dir}
fi

if [ ! -d "${dest_dir}" ]; then
  mkdir -p $dest_dir
  cp -rf ${install_dir}/* ${dest_dir}/
fi

# Replace the php/ directory with provided clean Dokuwiki installation
#
if [ -d ${OPENSHIFT_REPO_DIR}php ]; then
  rm -rf ${OPENSHIFT_REPO_DIR}php
fi

ln -sf ${dest_dir} ${OPENSHIFT_REPO_DIR}php
ln -sf ${data_dir} ${OPENSHIFT_REPO_DIR}php

set -e

# Proceed only if `$OPENSHIFT_DATA_DIR` does not contain a `pages`
# subdirectory.

if [ ! -d "$OPENSHIFT_DATA_DIR/pages" ];
then
    echo
    echo "done."
    echo "=================================================="
    echo "  Wiki-Admin login: admin"
    echo "  Wiki-Admin password: OpenShiftAdmin"
    echo "  Don't forget to change your wiki admin password!"
    echo "=================================================="
else
    if [ -d ${OPENSHIFT_REPO_DIR}.openshift/data ]; then
      mv $OPENSHIFT_REPO_DIR/.openshift/data/* $data_dir
    fi
    echo "This is not a fresh installation, skipping build"
fi
